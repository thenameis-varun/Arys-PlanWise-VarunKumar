## ðŸ”¹ Overview

PlanWise is an **AI-powered local event planning application** built with **Streamlit**. It leverages multiple **open-source LLMs** for intelligent suggestions and predictions while running **completely offline** (no API calls required).

The app allows users to:

* Input basic event details (type, duration, budget, catering).
* Receive AI-generated greetings, summaries, compliments, **predicted audience type**, and **tech requirements**.
* Predict **budget suggestions** based on user input.
* Adjust funds dynamically, with visual **success confidence bars**.

---

## ðŸ”¹ Tech Stack

### Backend / AI Inference

* **[Hugging Face Transformers](https://huggingface.co/docs/transformers/index)**
  Lightweight LLM for structured text generation.

  * Model used: `flan-t5-base`
  * Runs locally for predicting audience type and tech requirements (AI1).

* **CSV-Based Budget Prediction (AI2)**
  Uses simple rule-based logic to predict budget (\~10% of input budget in current implementation).

### Frontend / App

* **[Streamlit](https://streamlit.io/)**
  Provides a modern, interactive, web-based UI for event planning.

---

## ðŸ”¹ Features

### Step 1: Event Inputs

* Event Type: Conference, Concert, Festival, Networking Event, Exhibition, Workshop.
* Duration (hours)
* Budget
* Catering Required (Yes/No)

### Step 2: AI Suggestions (AI1)

* Generates **greeting**, **summary**, and **compliment** based on user inputs.
* Predicts **Audience Type** and **Tech Requirement** for autofill in dropdowns.
* Users can override these predictions manually.

### Step 3: Budget Prediction (AI2)

* Calculates a predicted budget (currently `0.1 Ã— user budget`).
* Displays an **Event Success Confidence** bar (0â€“100%) based on the user budget relative to predicted budget.

### Step 4: Funds Adjustment (New Feature)

* Users can **add or remove funds** via a numeric input (+/-).
* Progress bar visualizes the new budget against a range of 0â€“200% of predicted budget.
* Dynamic feedback based on percentage of the bar:

  | Range   | Feedback      |
  | ------- | ------------- |
  | 0â€“25%   | Give UP       |
  | 25â€“50%  | Get Lucky     |
  | 50â€“75%  | Better        |
  | 75â€“100% | Super Success |

---

## ðŸ”¹ Example Workflow

1. User enters **Conference**, 4 hours, â‚¹5000, Catering: Yes.
2. AI1 responds:

   ```
   Greeting: Hello! You are planning a Conference.
   Summary: This event will last 4 hours with a budget of 5000. Catering: Yes.
   Compliment: Great choice! Your Conference sounds exciting and well thought out.
   Audience Type: Professionals
   Tech Requirement: Medium
   ```
3. Dropdowns are auto-filled with predicted **Audience Type** and **Tech Requirement**.
4. AI2 predicts budget: â‚¹500 (10% of input).
5. Confidence bar shows \~0% (user budget > predicted budget).
6. User adjusts funds (+2000). The new bar shows **Super Success**.

---

## ðŸ”¹ Key Learnings

* **LLMs for structured predictions** can be integrated locally using Hugging Face models.
* Simple **rule-based logic** is sufficient for budget prediction in prototype stage.
* Interactive UI with **dynamic progress bars** improves user experience.
* Users retain control by overriding AI-suggested values.

---

## ðŸ”¹ Tech Requirements

```
streamlit==1.36.0
transformers==4.44.0
torch==2.3.0
numpy==1.26.4
pandas==2.2.2
```

---

## ðŸ”¹ Next Steps

* Replace AI2 rule-based budget with **ML-trained model** using historical event data.
* Enhance funds adjustment visualization with **plotly/dynamic markers**.
* Support **multi-event planning** and **history tracking**.
* Benchmark LLM inference speed on CPU/GPU.

---

